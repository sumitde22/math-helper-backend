{"version":3,"sources":["components/Notification.js","services/authService.js","services/problemService.js","services/userService.js","reducers/reducer.js","components/Login.js","components/UserStatistics.js","components/ProblemIndex.js","components/QuestionPrompt.js","components/ProblemStatistics.js","components/UserInstructions.js","components/Dashboard.js","components/App.js","store.js","index.js"],"names":["Notification","section","notificationInfo","useSelector","state","show","textMessage","message","mathEquation","math_expression","math","baseUrl","authService","createUser","username","password","a","axios","post","apiResponse","userInfo","data","response","loginUser","getNewToken","refreshToken","headers","newTokenInfo","problemService","getAllProblems","token","get","allProblems","getDailyProblems","dailyProblems","solveProblem","problem_id","answer","payload","correctInfo","resetProblem","put","confirmationMessage","userService","getUserStatistics","user_id","userStatistics","deleteUser","delete","resetUser","defaultNotificationState","defaultState","authInfo","showNotification","type","dispatch","Date","now","getProblems","reducer","action","Login","useDispatch","useState","setUsername","setPassword","newUser","setNewUser","newPassword","setNewPassword","onSubmit","event","preventDefault","window","localStorage","setItem","JSON","stringify","access_token","id","msg","setTimeout","name","value","onChange","target","UserStatistics","history","useHistory","cellStyle","map","date_statistic","style","attempt_date","substring","solved","attempts","onClick","userId","refresh_token","push","ProblemIndex","problem","to","QuestionPrompt","problemInfo","userResponse","setUserResponse","block","latex_rep","assumptions_latex","problemId","userAnswer","responseInfo","ProblemStatistics","match","useRouteMatch","find","parseInt","params","undefined","most_recent_solved","UserInstructions","centerStyle","Dashboard","problemToAsk","length","Math","floor","random","dashboardMessage","linkStyle","padding","clear","path","App","useEffect","loggedUserJSON","getItem","user","parse","error","reloadUser","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","Store","document","getElementById"],"mappings":"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","file":"static/js/main.c99c8188.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\"\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\n\nconst Notification = ({section}) => {\n    const notificationInfo = useSelector(state => state.notificationInfo)\n    if (notificationInfo.show && notificationInfo.section === section) {\n\n        const textMessage = notificationInfo.message\n        const mathEquation = notificationInfo.math_expression !== null ? <TeX math={notificationInfo.math_expression} /> : null\n        return <div> {textMessage}{mathEquation} </div>\n    } else {\n        return null\n    }\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/auth'\n\nconst createUser = async (username, password) => {\n    try {\n        const apiResponse = await axios.post(`${baseUrl}/register`, {username, password})\n        const userInfo = apiResponse.data\n        return userInfo\n    } catch (error) {\n        throw error.response.data\n    }\n}\n\nconst loginUser = async (username, password) => {\n    try {\n        const apiResponse = await axios.post(`${baseUrl}/login`, {username, password})\n        const userInfo = apiResponse.data\n        return userInfo\n    } catch (error) {\n        throw error.response.data\n    }\n}\n\nconst getNewToken = async refreshToken => {\n    try {\n        const apiResponse = await axios.post(`${baseUrl}/refresh`, {}, {headers: {'Authorization': `Bearer ${refreshToken}`}})\n        const newTokenInfo = apiResponse.data\n        return newTokenInfo\n    } catch (error) {\n        throw error.response.data\n    }\n   \n}\n\nconst authService = {createUser, loginUser, getNewToken}\nexport default authService","import axios from 'axios'\n\nconst baseUrl = '/api/problems'\n\nconst getAllProblems = async token => {\n    const apiResponse = await axios.get(`${baseUrl}/`, {headers: {'Authorization': `Bearer ${token}`}})\n    const allProblems = apiResponse.data\n    return allProblems\n}\n\nconst getDailyProblems = async token => {\n    const apiResponse = await axios.get(`${baseUrl}/daily`, {headers: {'Authorization': `Bearer ${token}`}})\n    const dailyProblems = apiResponse.data\n    return dailyProblems\n}\n\nconst solveProblem = async (token, problem_id, answer) => {\n    try {\n        const payload = {'answer': answer}\n        const apiResponse = await axios.post(`${baseUrl}/solve/${problem_id}`, payload, {headers: {'Authorization': `Bearer ${token}`}})\n        const correctInfo = apiResponse.data\n        return correctInfo\n    } catch(error) {\n        throw error.response.data\n    }\n}\n\nconst resetProblem = async (token, problem_id) => {\n    const payload = {'reset': true}\n    const apiResponse = await axios.put(`${baseUrl}/${problem_id}`, payload, {headers: {'Authorization': `Bearer ${token}`}})\n    const confirmationMessage = apiResponse.data['msg']\n    return confirmationMessage\n}\n\nconst problemService = {getAllProblems, getDailyProblems, solveProblem, resetProblem}\n\nexport default problemService","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getUserStatistics = async (user_id, token) => {\n    const apiResponse = await axios.get(`${baseUrl}/${user_id}`, {headers: {'Authorization': `Bearer ${token}`}})\n    const userStatistics = apiResponse.data\n    return userStatistics\n}\n\nconst deleteUser = async (user_id, token) => {\n    const apiResponse = await axios.delete(`${baseUrl}/${user_id}`, {headers: {'Authorization': `Bearer ${token}`}})\n    const confirmationMessage = apiResponse.data['msg']\n    return confirmationMessage\n}\n\nconst resetUser = async (user_id, token) => {\n    const payload = {'reset': true}\n    const apiResponse = await axios.put(`${baseUrl}/${user_id}`, payload, {headers: {'Authorization': `Bearer ${token}`}})\n    const confirmationMessage = apiResponse.data['msg']\n    return confirmationMessage\n}\n\nconst userService = {getUserStatistics, deleteUser, resetUser}\n\nexport default userService","import authService from \"../services/authService\"\nimport problemService from \"../services/problemService\"\nimport userService from \"../services/userService\"\n\nconst defaultNotificationState = {show: false, message: \"\", math_expression: null, section: \"\"}\nconst defaultState = {notificationInfo: defaultNotificationState, authInfo: null, allProblems: null, dailyProblems: null, userStatistics: null}\n\nconst reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case \"LOGIN\":\n            return { ...state, authInfo: action.payload}\n        case \"RELOAD_USER\":\n            return {...state, authInfo: action.payload}\n        case \"REFRESH_TOKEN\":\n            return {...state, authInfo: {...state.authInfo, \"access_token\": action.payload[\"access_token\"], \"refresh_token\": action.payload[\"refresh_token\"], \"login_time\": action.payload[\"login_time\"]}}\n        case \"GET_PROBLEMS\":\n            return { ...state, allProblems: action.payload}\n        case \"GET_DAILY_PROBLEMS\":\n            return { ...state, dailyProblems: action.payload}\n        case \"GET_USER_STATISTICS\":\n            return { ...state, userStatistics: action.payload}\n        case \"LOGOUT\":\n            return defaultState\n        case \"DELETE_USER\":\n            return defaultState\n        case \"SHOW_NOTIFICATION\":\n            return { ...state, notificationInfo: action.payload}\n        case \"HIDE_NOTIFICATION\":\n            return { ...state, notificationInfo: defaultNotificationState}\n        default:\n            return state\n    }\n}\n\nexport const showNotification = (message, math_expression, section) => {\n    return {type: 'SHOW_NOTIFICATION', payload: {show: true, message, math_expression, section}}\n}\n\nexport const hideNotification = () => {\n    return {type: 'HIDE_NOTIFICATION'}\n}\n\nexport const createUser = (username, password) => {\n    return async dispatch => {\n        try {\n            const userInfo = await authService.createUser(username, password)\n            dispatch(showNotification(`User ${userInfo.username} successfully created!`, null, \"CREATE_USER\"))\n            setTimeout(() => dispatch(hideNotification()), 5000)\n        } catch (error) {\n            dispatch(showNotification(`Error: ${error.msg}`, null, \"CREATE_USER\"))\n            setTimeout(() => dispatch(hideNotification()), 5000)\n        }\n    }\n}\n\nexport const loginUser = (username, password) => {\n    return async dispatch => {\n        try {\n            const userInfo = await authService.loginUser(username, password)\n            window.localStorage.setItem('userInfo', JSON.stringify(userInfo))\n\n            userInfo['login_time'] = Date.now()\n            const action = {type: 'LOGIN', payload: userInfo}\n            dispatch(action)\n\n            dispatch(getDailyProblems(userInfo.access_token))\n            dispatch(getProblems(userInfo.access_token))\n            dispatch(getUserStatistics(userInfo.id, userInfo.access_token))\n        } catch (error) {\n            dispatch(showNotification(`Error: ${error.msg}`, null, \"LOGIN\"))\n            setTimeout(() => dispatch(hideNotification()), 5000)\n        }\n    }\n}\n\nexport const reloadUser = (authInfo) => {\n    return async dispatch => {\n        try {\n            authInfo['login_time'] = Date.now()\n            const action = {type: \"RELOAD_USER\", payload: authInfo}\n            dispatch(action)\n\n            dispatch(getDailyProblems(authInfo.access_token))\n            dispatch(getProblems(authInfo.access_token))\n            dispatch(getUserStatistics(authInfo.id, authInfo.access_token))\n        } catch (error) {\n            dispatch(showNotification('Error: Login token expired. Please log back in.', null, \"LOGIN\"))\n            setTimeout(() => dispatch(hideNotification()), 5000)\n        }\n    }\n}\n\nexport const refreshToken = (refreshToken) => {\n    return async dispatch => {\n        const payload = await authService.getNewToken(refreshToken)\n        payload['login_time'] = Date.now()\n        const action = {type: 'REFRESH_TOKEN', payload}\n        dispatch(action)\n        \n    }\n}\n\nexport const logoutUser = () => {\n    return async dispatch => {\n        window.localStorage.clear()\n        dispatch({type: 'LOGOUT'})\n    }\n}\n\nexport const submitAnswer = (token, userId, problemId, userAnswer) => {\n    return async dispatch => {\n        try {\n            const responseInfo = await problemService.solveProblem(token, problemId, userAnswer)\n            const message = responseInfo['correct'] ? 'Correct! Sample solution: ' : 'Incorrect. Correct answer: '\n            dispatch(showNotification(message, responseInfo['sample_solution'], \"SHOW_SOLUTION\"))\n            setTimeout(() => dispatch(hideNotification()), 5000)\n        } catch (error) {\n            dispatch(showNotification(`Error: ${error.msg}`, null, \"SUBMISSION_ERROR\"))\n            setTimeout(() => dispatch(hideNotification()), 5000)\n        }\n        \n        dispatch(getDailyProblems(token))\n        dispatch(getProblems(token))\n        dispatch(getUserStatistics(userId, token))\n    }\n}\n\nexport const resetQuestion = (token, userId, problemId) => {\n    return async dispatch => {\n        const message = await problemService.resetProblem(token, problemId)\n        dispatch(showNotification(message, null, \"RESET_PROBLEM\"))\n        setTimeout(() => dispatch(hideNotification()), 5000)\n        \n        dispatch(getDailyProblems(token))\n        dispatch(getProblems(token))\n        dispatch(getUserStatistics(userId, token))\n    }\n}\n\nexport const resetUser = (userId, token) => {\n    return async dispatch => {\n        const message = await userService.resetUser(userId, token)\n        dispatch(showNotification(message, null, \"RESET_USER\"))\n        setTimeout(() => dispatch(hideNotification()), 5000)\n        \n        dispatch(getDailyProblems(token))\n        dispatch(getProblems(token))\n        dispatch(getUserStatistics(userId, token))\n    }\n}\n\nexport const deleteUser = (userId, token) => {\n    return async dispatch => {\n        const message = await userService.deleteUser(userId, token)\n        dispatch(showNotification(message, null, \"DELETE_USER\"))\n        setTimeout(() => dispatch(hideNotification()), 5000)\n        dispatch({type: 'DELETE_USER'})\n    }\n}\n\nexport const getDailyProblems = token => {\n    return async dispatch => {\n        const payload = await problemService.getDailyProblems(token)\n        const action = {\n            type: 'GET_DAILY_PROBLEMS',\n            payload\n        }\n        dispatch(action)\n    }\n}\n\nexport const getProblems = token => {\n    return async dispatch => {\n        const payload = await problemService.getAllProblems(token)\n        const action = {\n            type: 'GET_PROBLEMS',\n            payload\n        }\n        dispatch(action)\n    }\n}\n\nexport const getUserStatistics = (user_id, token) => {\n    return async dispatch => {\n        const payload = await userService.getUserStatistics(user_id, token)\n        const action = {\n            type: 'GET_USER_STATISTICS',\n            payload\n        }\n        dispatch(action)\n    }\n}\n\n\nexport default reducer","import {useDispatch} from 'react-redux';\nimport {useState} from 'react';\nimport Notification from './Notification';\nimport { createUser, loginUser } from '../reducers/reducer';\n\nconst Login = () => {\n    const dispatch = useDispatch()\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [newUser, setNewUser] = useState(\"\")\n    const [newPassword, setNewPassword] = useState(\"\")\n\n    const loginHandler = event => {\n        event.preventDefault()\n        dispatch(loginUser(username, password))\n        setNewUser(\"\")\n        setNewPassword(\"\")\n    }\n\n    const createUserHandler = event => {\n        event.preventDefault()\n        dispatch(createUser(newUser, newPassword))\n        setNewUser(\"\")\n        setNewPassword(\"\")\n    }\n\n    const handleUsernameChange = event => {\n        event.preventDefault()\n        setUsername(event.target.value)\n    }\n\n    const handlePasswordChange = event => {\n        event.preventDefault()\n        setPassword(event.target.value)\n    }\n\n    const handleNewUser = event => {\n        event.preventDefault()\n        setNewUser(event.target.value)\n    }\n\n    const handleNewPassword = event => {\n        event.preventDefault()\n        setNewPassword(event.target.value)\n    }\n\n    return (\n      <div>\n        <h2>Login</h2>\n        <form onSubmit={loginHandler}>\n          <label>username <input type=\"text\" name=\"username\" value={username} onChange={handleUsernameChange}/></label><br />\n          <label>password <input type=\"password\" name=\"password\" value={password} onChange={handlePasswordChange}/></label><br />\n          <label><input type=\"submit\" name=\"login\"/></label>\n        </form>\n        <Notification section=\"LOGIN\" />\n        <br />\n        <h2>Create User</h2>\n        <form onSubmit={createUserHandler}>\n          <label>username <input type=\"text\" name=\"username\" value={newUser} onChange={handleNewUser}/></label><br />\n          <label>password <input type=\"password\" name=\"password\" value={newPassword} onChange={handleNewPassword}/></label><br />\n          <label><input type=\"submit\" name=\"create new user\"/></label>\n        </form>\n        <Notification section=\"CREATE_USER\" />\n      </div>\n      \n    )\n}\n\nexport default Login;","import { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteUser, hideNotification, refreshToken, resetUser, showNotification } from \"../reducers/reducer\";\nimport Notification from \"./Notification\";\n\nconst UserStatistics = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const authInfo = useSelector(state => state.authInfo)\n  const userStatistics = useSelector(state => state.userStatistics)\n\n  const resetUserOnClick = event => {\n    event.preventDefault()\n    const currentTime = Date.now()\n    if (currentTime - authInfo['login_time'] > authInfo['token_expires']) {\n        dispatch(refreshToken(authInfo.refresh_token))\n        dispatch(showNotification('Login token expired. Please resubmit answer.', null, 'RESUBMIT'))\n        setTimeout(() => dispatch(hideNotification()), 5000)\n    } else {\n        dispatch(resetUser(authInfo.id, authInfo.access_token))\n    }\n  }\n\n  const deleteUserOnClick = event => {\n    event.preventDefault()\n    const currentTime = Date.now()\n    if (currentTime - authInfo['login_time'] > authInfo['token_expires']) {\n        dispatch(refreshToken(authInfo.refresh_token))\n        dispatch(showNotification('Login token expired. Please resubmit answer.', null, 'RESUBMIT'))\n        setTimeout(() => dispatch(hideNotification()), 5000)\n    } else {\n        dispatch(deleteUser(authInfo.id, authInfo.access_token))\n        history.push('/')\n    }\n    \n  }\n\n  const cellStyle = {\"textAlign\": \"center\"}\n  \n  if (userStatistics === null) {\n      return \"Loading...\"\n  } else {\n      return (\n        <div>\n          <br />\n            <table>\n              <thead>\n                <tr>\n                  <th>Date</th>\n                  <th>Solved</th>\n                  <th>Attempts</th>\n                </tr>\n              </thead>\n              <tbody>\n                {userStatistics.map(date_statistic => <tr key={date_statistic.attempt_date}>\n                  <td style={cellStyle}>{date_statistic.attempt_date.substring(0, 16)} </td>\n                  <td style={cellStyle}>{date_statistic.solved} </td>\n                  <td style={cellStyle}>{date_statistic.attempts}</td>\n                </tr>)}\n              </tbody>\n            </table>\n          <br />\n          <button onClick={resetUserOnClick}>Reset User</button>\n          <button onClick={deleteUserOnClick}>Delete User</button>\n          <Notification section=\"RESUBMIT\" />\n      </div>)}\n  }\n    \nexport default UserStatistics;","import { useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\n\nconst ProblemIndex = () => {\n    const allProblems = useSelector(state => state.allProblems)\n    if (allProblems === null) {\n        return \"Loading...\"\n    } else {\n        return (\n            <div>\n                <ul>\n                    {allProblems.map(problem => <li key={problem.id}><Link to={`/problems/${problem.id}`}>Problem {problem.id}</Link></li>)}\n                </ul>\n            </div>\n        )\n    }\n    \n}\n\nexport default ProblemIndex","import { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { hideNotification, refreshToken, showNotification, submitAnswer } from \"../reducers/reducer\"\nimport Notification from \"./Notification\"\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\n\nconst QuestionPrompt = ({problemInfo}) => {\n    const dispatch = useDispatch()\n    const authInfo = useSelector(state => state.authInfo)\n    const [userResponse, setUserResponse] = useState('')\n\n    const handleUserInput = event => {\n        event.preventDefault()\n        setUserResponse(event.target.value)\n    }\n\n    const submitResponse = event => {\n        event.preventDefault()\n        const currentTime = Date.now()\n        if (currentTime - authInfo['login_time'] > authInfo['token_expires']) {\n            dispatch(refreshToken(authInfo.refresh_token))\n            dispatch(showNotification('Login token expired. Please resubmit answer.', null, 'RESUBMIT'))\n            setTimeout(() => dispatch(hideNotification()), 5000)\n        } else {\n            dispatch(submitAnswer(authInfo.access_token, authInfo.id, problemInfo.id, userResponse))\n            setUserResponse('')\n        }\n    }\n\n    const centerStyle = {\n        \"textAlign\": \"center\"\n    }\n\n    return (\n        <div style={centerStyle}>\n            <Notification section=\"SHOW_SOLUTION\" />\n            <TeX block>{problemInfo.latex_rep}</TeX>\n            {problemInfo.assumptions_latex !== null && <TeX block>{problemInfo.assumptions_latex}</TeX>}\n            <Notification section=\"RESUBMIT\" />\n            <form onSubmit={submitResponse}>\n                <input type=\"text\" value={userResponse} onChange={handleUserInput}/>\n                <br />\n                <br />\n                <input type=\"submit\" value=\"Submit\" />\n            </form>   \n        </div>\n    )\n}\n\nexport default QuestionPrompt","import { useDispatch, useSelector } from \"react-redux\"\nimport { useRouteMatch } from \"react-router-dom\"\nimport { hideNotification, refreshToken, resetQuestion, showNotification} from \"../reducers/reducer\"\nimport Notification from \"./Notification\"\nimport QuestionPrompt from \"./QuestionPrompt\"\n\nconst ProblemStatistics = () => {\n    const dispatch = useDispatch()\n    const match = useRouteMatch(\"/problems/:id\")\n    const authInfo = useSelector(state => state.authInfo)\n    const problemInfo = useSelector(state => {\n        if (state.allProblems === null) {\n            return null\n        } else {\n            return state.allProblems.find(problem => problem.id === parseInt(match.params.id))\n        }\n    })\n\n    const resetQuestionOnClick = event => {\n        event.preventDefault()\n        const currentTime = Date.now()\n        if (currentTime - authInfo['login_time'] > authInfo['token_expires']) {\n          dispatch(refreshToken(authInfo.refresh_token))\n          dispatch(showNotification('Login token expired. Please resubmit answer.', null, 'RESUBMIT'))\n          setTimeout(() => dispatch(hideNotification()), 5000)\n        } else {\n          dispatch(resetQuestion(authInfo.access_token, authInfo.id, problemInfo.id))\n        }\n    }\n\n    if (problemInfo === null) {\n        return \"Loading...\"\n    } else if (problemInfo === undefined) {\n        return `Problem with id ${match.params.id} doesn't exist`\n    } else {\n        return (\n            <div>\n                <h3>Solved: {problemInfo.solved}</h3>\n                <h3>Attempted: {problemInfo.attempts}</h3>\n                <h3>Most Recent Attempt: {problemInfo.most_recent_solved !== null ? problemInfo.most_recent_solved.substring(0, 16) : \"N/A\"}</h3>\n                <QuestionPrompt problemInfo={problemInfo} />\n                <button onClick={resetQuestionOnClick}>Reset Question</button>\n                <Notification section=\"RESUBMIT\" />\n            </div>\n        )\n    }\n}\n\nexport default ProblemStatistics","import 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\n\nconst functionLatex = 'f(x)'\nconst derivativeLatex = 'f\\'(x)'\nconst nestedDerivativeLatex = 'f\\'(g(x))'\nconst indefiniteIntegralLatex = '\\\\int f(x) \\\\ dx'\nconst definiteIntegralLatex = '\\\\int_a^b f(x) \\\\ dx'\nconst sinLatex = '\\\\sin{x}'\nconst cosLatex = '\\\\cos{x}'\nconst tanLatex = '\\\\tan{x}'\nconst cscLatex = '\\\\csc{x}'\nconst secLatex = '\\\\sec{x}'\nconst cotLatex = '\\\\cot{x}'\nconst asinLatex = '\\\\sin^{-1}{x}'\nconst acosLatex = '\\\\cos^{-1}{x}'\nconst atanLatex = '\\\\tan^{-1}{x}'\nconst eLatex = 'e'\nconst piLatex = '\\\\pi'\nconst logLatex = '\\\\log{x}'\nconst lnLatex = '\\\\ln{x}'\nconst sqrtLatex = '\\\\sqrt{x}'\n\nconst UserInstructions = () => {\n    const centerStyle = {\n        \"textAlign\": \"center\"\n    }\n    return (\n        <div>\n            <br />\n            Use order of operations when specifying answer.\n            <br />\n            <table style={centerStyle}>\n                <thead>\n                    <tr>\n                        <th>syntax</th>\n                        <th>operation</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>+</td>\n                        <td>addition</td>\n                    </tr>\n                    <tr>\n                        <td>-</td>\n                        <td>subtraction</td>\n                    </tr>\n                    <tr>\n                        <td>*</td>\n                        <td>multiplication</td>\n                    </tr>\n                    <tr>\n                        <td>/</td>\n                        <td>division</td>\n                    </tr>\n                    <tr>\n                        <td>**</td>\n                        <td>exponent</td>\n                    </tr>\n                    <tr>\n                        <td>( )</td>\n                        <td>parentheses</td>\n                    </tr>\n                </tbody>\n            </table>\n            <br />\n            Use variables specified in problem.\n            <table style={centerStyle}>\n                <thead>\n                    <tr>\n                        <th>format</th>\n                        <th>interpretation</th>\n                        <th>math representation</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>f(x)</td>\n                        <td>function f</td>\n                        <td><TeX>{functionLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>Derivative(f(x), x)</td>\n                        <td>derivative of f with x as input</td>\n                        <td><TeX>{derivativeLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>Derivative(f(g(x)), g(x))</td>\n                        <td>derivative of f with g(x) as input</td>\n                        <td><TeX>{nestedDerivativeLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>Integral(f(x), x)</td>\n                        <td>integral of f</td>\n                        <td><TeX>{indefiniteIntegralLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>Integral(f(x), (x, a, b))</td>\n                        <td>integral of f evaluated from range a to b</td>\n                        <td><TeX>{definiteIntegralLatex}</TeX></td>\n                    </tr>\n                </tbody>\n            </table>\n            <br />\n            Pre-defined constants and functions to use\n            <table style={centerStyle}>\n                <thead>\n                    <tr>\n                        <th>format</th>\n                        <th>math representation</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>E</td>\n                        <td><TeX>{eLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>pi</td>\n                        <td><TeX>{piLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>log(x)</td>\n                        <td><TeX>{logLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>ln(x)</td>\n                        <td><TeX>{lnLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>sqrt(x)</td>\n                        <td><TeX>{sqrtLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>sin(x)</td>\n                        <td><TeX>{sinLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>cos(x)</td>\n                        <td><TeX>{cosLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>tan(x)</td>\n                        <td><TeX>{tanLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>csc(x)</td>\n                        <td><TeX>{cscLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>sec(x)</td>\n                        <td><TeX>{secLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>cot(x)</td>\n                        <td><TeX>{cotLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>asin(x)</td>\n                        <td><TeX>{asinLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>acos(x)</td>\n                        <td><TeX>{acosLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>atan(x)</td>\n                        <td><TeX>{atanLatex}</TeX></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default UserInstructions","import { useSelector, useDispatch } from 'react-redux';\nimport { Link, Route, Switch, useHistory} from 'react-router-dom';\nimport UserStatistics from './UserStatistics';\nimport ProblemIndex from './ProblemIndex';\nimport ProblemStatistics from './ProblemStatistics';\nimport QuestionPrompt from './QuestionPrompt';\nimport { logoutUser } from '../reducers/reducer';\nimport UserInstructions from './UserInstructions';\n\nconst Dashboard = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const dailyProblems = useSelector(state => state.dailyProblems)\n\n    const randomDailyProblemIndex = () => {\n      const index = Math.floor(Math.random() * dailyProblems.length)\n      return index\n    }\n    const problemToAsk = dailyProblems !== null && dailyProblems.length !== 0 ? dailyProblems[randomDailyProblemIndex()] : null\n    const dashboardMessage = dailyProblems === null ? \"Loading...\" : \"Daily problem set finished!\"\n\n    const logout = event => {\n      event.preventDefault()\n      dispatch(logoutUser())\n      history.push('/')\n    }\n\n    const linkStyle = {padding: 5}\n\n    // saving to local storage: https://fullstackopen.com/en/part5/login_in_frontend#saving-the-token-to-the-browsers-local-storage\n    return (\n      <div>\n        <div>\n          <Link style={linkStyle} to=\"/\">home</Link>\n          <Link style={linkStyle} to=\"/problems\">problems</Link>\n          <Link style={linkStyle} to=\"/info\">user info</Link>\n          <Link style={linkStyle} to=\"/instructions\">instructions</Link>\n          <Link style={linkStyle} to=\"/\" onClick={logout}>logout</Link>\n        </div>\n        <Switch>\n          <Route path=\"/problems/:id\">\n            <ProblemStatistics />\n          </Route>\n          <Route path=\"/problems\">\n            <ProblemIndex />\n          </Route>\n          <Route path=\"/info\">\n            <UserStatistics />\n          </Route>\n          <Route path=\"/instructions\">\n            <UserInstructions />\n          </Route>          \n          <Route path=\"/\">\n            {dailyProblems !== null && dailyProblems.length !== 0 ? <QuestionPrompt problemInfo={problemToAsk} /> : dashboardMessage}\n          </Route>\n        </Switch>\n      </div>\n    )\n}\n\nexport default Dashboard","import Login from './Login'\nimport Dashboard from './Dashboard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { reloadUser } from '../reducers/reducer';\n\n\nconst App = () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('userInfo')\n        if (loggedUserJSON) {\n          const user = JSON.parse(loggedUserJSON)\n          dispatch(reloadUser(user))\n        }\n      }, [])\n    \n    const authInfo = useSelector(state => state.authInfo)\n    if (authInfo !== null) {\n        return <Dashboard />\n    } else {\n        return <Login />\n    }\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reducer from './reducers/reducer'\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport Store from './store';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <Router> \n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
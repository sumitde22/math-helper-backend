{"version":3,"sources":["services/authService.js","services/problemService.js","services/userService.js","reducers/reducer.js","components/Notification.js","components/Login.js","components/Loading.js","components/UserStatistics.js","components/ProblemIndex.js","components/QuestionPrompt.js","components/ProblemStatistics.js","components/UserInstructions.js","components/DailyProblemDisplay.js","components/About.js","components/Dashboard.js","components/App.js","store.js","index.js"],"names":["baseUrl","authService","createUser","username","password","a","axios","post","apiResponse","userInfo","data","response","loginUser","getNewToken","refreshToken","headers","newTokenInfo","problemService","getAllProblems","token","get","allProblems","getDailyProblems","dailyProblems","solveProblem","problem_id","answer","payload","correctInfo","resetProblem","put","confirmationMessage","userService","getUserStatistics","user_id","userStatistics","deleteUser","delete","resetUser","defaultNotificationState","show","message","math_expression","section","success","defaultState","notificationInfo","authInfo","showNotification","type","dispatch","Date","now","getProblems","reducer","state","action","Notification","useDispatch","useSelector","textMessage","mathEquation","math","Alert","variant","onClose","dismissible","Login","useState","setUsername","setPassword","newUser","setNewUser","newPassword","setNewPassword","loginComponent","Form","onSubmit","event","preventDefault","window","localStorage","setItem","JSON","stringify","access_token","id","msg","Group","className","controlId","Label","Control","placeholder","value","onChange","target","Button","createUserComponent","Text","muted","Loading","Spinner","animation","UserStatistics","history","useHistory","style","Table","striped","bordered","hover","size","map","date_statistic","attempt_date","substring","solved","attempts","onClick","userId","refresh_token","push","ProblemIndex","problem","to","latex_rep","most_recent_solved","QuestionPrompt","problemInfo","userResponse","setUserResponse","block","assumptions_latex","problemId","userAnswer","responseInfo","ProblemStatistics","match","useRouteMatch","find","parseInt","params","undefined","UserInstructions","DailyProblemDisplay","centerStyle","length","randomIndex","Math","floor","random","About","href","Dashboard","linkStyle","padding","clear","path","exact","App","useEffect","loggedUserJSON","getItem","user","parse","error","reloadUser","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","Store","document","getElementById"],"mappings":"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","file":"static/js/main.12a7803e.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/auth'\n\nconst createUser = async (username, password) => {\n    try {\n        const apiResponse = await axios.post(`${baseUrl}/register`, {username, password})\n        const userInfo = apiResponse.data\n        return userInfo\n    } catch (error) {\n        throw error.response.data\n    }\n}\n\nconst loginUser = async (username, password) => {\n    try {\n        const apiResponse = await axios.post(`${baseUrl}/login`, {username, password})\n        const userInfo = apiResponse.data\n        return userInfo\n    } catch (error) {\n        throw error.response.data\n    }\n}\n\nconst getNewToken = async refreshToken => {\n    try {\n        const apiResponse = await axios.post(`${baseUrl}/refresh`, {}, {headers: {'Authorization': `Bearer ${refreshToken}`}})\n        const newTokenInfo = apiResponse.data\n        return newTokenInfo\n    } catch (error) {\n        throw error.response.data\n    }\n   \n}\n\nconst authService = {createUser, loginUser, getNewToken}\nexport default authService","import axios from 'axios'\n\nconst baseUrl = '/api/problems'\n\nconst getAllProblems = async token => {\n    const apiResponse = await axios.get(`${baseUrl}/`, {headers: {'Authorization': `Bearer ${token}`}})\n    const allProblems = apiResponse.data\n    return allProblems\n}\n\nconst getDailyProblems = async token => {\n    const apiResponse = await axios.get(`${baseUrl}/daily`, {headers: {'Authorization': `Bearer ${token}`}})\n    const dailyProblems = apiResponse.data\n    return dailyProblems\n}\n\nconst solveProblem = async (token, problem_id, answer) => {\n    try {\n        const payload = {'answer': answer}\n        const apiResponse = await axios.post(`${baseUrl}/solve/${problem_id}`, payload, {headers: {'Authorization': `Bearer ${token}`}})\n        const correctInfo = apiResponse.data\n        return correctInfo\n    } catch(error) {\n        throw error.response.data\n    }\n}\n\nconst resetProblem = async (token, problem_id) => {\n    const payload = {'reset': true}\n    const apiResponse = await axios.put(`${baseUrl}/${problem_id}`, payload, {headers: {'Authorization': `Bearer ${token}`}})\n    const confirmationMessage = apiResponse.data['msg']\n    return confirmationMessage\n}\n\nconst problemService = {getAllProblems, getDailyProblems, solveProblem, resetProblem}\n\nexport default problemService","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getUserStatistics = async (user_id, token) => {\n    const apiResponse = await axios.get(`${baseUrl}/${user_id}`, {headers: {'Authorization': `Bearer ${token}`}})\n    const userStatistics = apiResponse.data\n    return userStatistics\n}\n\nconst deleteUser = async (user_id, token) => {\n    const apiResponse = await axios.delete(`${baseUrl}/${user_id}`, {headers: {'Authorization': `Bearer ${token}`}})\n    const confirmationMessage = apiResponse.data['msg']\n    return confirmationMessage\n}\n\nconst resetUser = async (user_id, token) => {\n    const payload = {'reset': true}\n    const apiResponse = await axios.put(`${baseUrl}/${user_id}`, payload, {headers: {'Authorization': `Bearer ${token}`}})\n    const confirmationMessage = apiResponse.data['msg']\n    return confirmationMessage\n}\n\nconst userService = {getUserStatistics, deleteUser, resetUser}\n\nexport default userService","import authService from \"../services/authService\"\nimport problemService from \"../services/problemService\"\nimport userService from \"../services/userService\"\n\nconst defaultNotificationState = {show: false, message: \"\", math_expression: null, section: \"\", success: true}\nconst defaultState = {notificationInfo: defaultNotificationState, authInfo: null, allProblems: null, dailyProblems: null, userStatistics: null}\n\nconst reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case \"LOGIN\":\n            return { ...state, authInfo: action.payload}\n        case \"RELOAD_USER\":\n            return {...state, authInfo: action.payload}\n        case \"REFRESH_TOKEN\":\n            return {...state, authInfo: {...state.authInfo, \"access_token\": action.payload[\"access_token\"], \"refresh_token\": action.payload[\"refresh_token\"], \"login_time\": action.payload[\"login_time\"]}}\n        case \"GET_PROBLEMS\":\n            return { ...state, allProblems: action.payload}\n        case \"GET_DAILY_PROBLEMS\":\n            return { ...state, dailyProblems: action.payload}\n        case \"GET_USER_STATISTICS\":\n            return { ...state, userStatistics: action.payload}\n        case \"LOGOUT\":\n            return defaultState\n        case \"DELETE_USER\":\n            return defaultState\n        case \"SHOW_NOTIFICATION\":\n            return { ...state, notificationInfo: action.payload}\n        case \"HIDE_NOTIFICATION\":\n            return { ...state, notificationInfo: defaultNotificationState}\n        default:\n            return state\n    }\n}\n\nexport const showNotification = (message, math_expression, section, success) => {\n    return {type: 'SHOW_NOTIFICATION', payload: {show: true, message, math_expression, section, success}}\n}\n\nexport const hideNotification = () => {\n    return {type: 'HIDE_NOTIFICATION'}\n}\n\nexport const createUser = (username, password) => {\n    return async dispatch => {\n        try {\n            const userInfo = await authService.createUser(username, password)\n            dispatch(showNotification(`User ${userInfo.username} successfully created!`, null, \"CREATE_USER\", true))\n        } catch (error) {\n            dispatch(showNotification(`Error: ${error.msg}`, null, \"CREATE_USER\", false))\n        }\n    }\n}\n\nexport const loginUser = (username, password) => {\n    return async dispatch => {\n        try {\n            const userInfo = await authService.loginUser(username, password)\n            window.localStorage.setItem('userInfo', JSON.stringify(userInfo))\n\n            userInfo['login_time'] = Date.now()\n            const action = {type: 'LOGIN', payload: userInfo}\n            dispatch(action)\n\n            dispatch(getDailyProblems(userInfo.access_token))\n            dispatch(getProblems(userInfo.access_token))\n            dispatch(getUserStatistics(userInfo.id, userInfo.access_token))\n        } catch (error) {\n            dispatch(showNotification(`Error: ${error.msg}`, null, \"LOGIN\", false))\n        }\n    }\n}\n\nexport const reloadUser = (authInfo) => {\n    return async dispatch => {\n        try {\n            authInfo['login_time'] = Date.now()\n            const action = {type: \"RELOAD_USER\", payload: authInfo}\n            dispatch(action)\n\n            dispatch(getDailyProblems(authInfo.access_token))\n            dispatch(getProblems(authInfo.access_token))\n            dispatch(getUserStatistics(authInfo.id, authInfo.access_token))\n        } catch (error) {\n            dispatch(showNotification('Error: Login token expired. Please log back in.', null, \"LOGIN\", false))\n        }\n    }\n}\n\nexport const refreshToken = (refreshToken) => {\n    return async dispatch => {\n        const payload = await authService.getNewToken(refreshToken)\n        payload['login_time'] = Date.now()\n        const action = {type: 'REFRESH_TOKEN', payload}\n        dispatch(action)\n        dispatch(showNotification('Error: Login token expired and had to be refreshed. Please try action again', null, \"RESUBMIT\", false))\n    }\n}\n\nexport const logoutUser = () => {\n    return async dispatch => {\n        window.localStorage.clear()\n        dispatch({type: 'LOGOUT'})\n    }\n}\n\nexport const submitAnswer = (token, userId, problemId, userAnswer) => {\n    return async dispatch => {\n        try {\n            const responseInfo = await problemService.solveProblem(token, problemId, userAnswer)\n            const message = responseInfo['correct'] ? 'Correct! Sample solution: ' : 'Incorrect. Correct answer: '\n            dispatch(showNotification(message, responseInfo['sample_solution'], \"SHOW_SOLUTION\", responseInfo['correct']))\n        } catch (error) {\n            dispatch(showNotification(`Error: ${error.msg}`, null, \"SUBMISSION_ERROR\", false))\n        }\n        \n        dispatch(getDailyProblems(token))\n        dispatch(getProblems(token))\n        dispatch(getUserStatistics(userId, token))\n    }\n}\n\nexport const resetQuestion = (token, userId, problemId) => {\n    return async dispatch => {\n        const message = await problemService.resetProblem(token, problemId)\n        dispatch(showNotification(message, null, \"RESET_PROBLEM\", true))\n        \n        dispatch(getDailyProblems(token))\n        dispatch(getProblems(token))\n        dispatch(getUserStatistics(userId, token))\n    }\n}\n\nexport const resetUser = (userId, token) => {\n    return async dispatch => {\n        const message = await userService.resetUser(userId, token)\n        dispatch(showNotification(message, null, \"RESET_USER\", true))\n        \n        dispatch(getDailyProblems(token))\n        dispatch(getProblems(token))\n        dispatch(getUserStatistics(userId, token))\n    }\n}\n\nexport const deleteUser = (userId, token) => {\n    return async dispatch => {\n        const message = await userService.deleteUser(userId, token)\n        dispatch({type: 'DELETE_USER'})\n        dispatch(showNotification(message, null, \"LOGIN\", true))\n    }\n}\n\nexport const getDailyProblems = token => {\n    return async dispatch => {\n        const payload = await problemService.getDailyProblems(token)\n        const action = {\n            type: 'GET_DAILY_PROBLEMS',\n            payload\n        }\n        dispatch(action)\n    }\n}\n\nexport const getProblems = token => {\n    return async dispatch => {\n        const payload = await problemService.getAllProblems(token)\n        const action = {\n            type: 'GET_PROBLEMS',\n            payload\n        }\n        dispatch(action)\n    }\n}\n\nexport const getUserStatistics = (user_id, token) => {\n    return async dispatch => {\n        const payload = await userService.getUserStatistics(user_id, token)\n        const action = {\n            type: 'GET_USER_STATISTICS',\n            payload\n        }\n        dispatch(action)\n    }\n}\n\n\nexport default reducer","import { useDispatch, useSelector } from \"react-redux\"\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\nimport { Alert } from \"react-bootstrap\";\nimport { hideNotification } from \"../reducers/reducer\";\n\nconst Notification = ({section}) => {\n    const dispatch = useDispatch()\n    const notificationInfo = useSelector(state => state.notificationInfo)\n    if (notificationInfo.show && notificationInfo.section === section) {\n        const textMessage = notificationInfo.message\n        const mathEquation = notificationInfo.math_expression !== null ? <TeX math={notificationInfo.math_expression} /> : null\n        return <Alert variant={notificationInfo.success ? \"success\" : \"danger\"} onClose={() => dispatch(hideNotification())} dismissible>{textMessage}{mathEquation}</Alert>\n    } else {\n        return null\n    }\n}\n\nexport default Notification","import {useDispatch} from 'react-redux';\nimport {useState} from 'react';\nimport Notification from './Notification';\nimport { createUser, loginUser } from '../reducers/reducer';\nimport { Form, Button } from 'react-bootstrap';\n\nconst Login = () => {\n    const dispatch = useDispatch()\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [newUser, setNewUser] = useState(\"\")\n    const [newPassword, setNewPassword] = useState(\"\")\n\n    const loginHandler = event => {\n        event.preventDefault()\n        dispatch(loginUser(username, password))\n        setNewUser(\"\")\n        setNewPassword(\"\")\n    }\n\n    const createUserHandler = event => {\n        event.preventDefault()\n        dispatch(createUser(newUser, newPassword))\n        setNewUser(\"\")\n        setNewPassword(\"\")\n    }\n\n    const handleUsernameChange = event => {\n        event.preventDefault()\n        setUsername(event.target.value)\n    }\n\n    const handlePasswordChange = event => {\n        event.preventDefault()\n        setPassword(event.target.value)\n    }\n\n    const handleNewUser = event => {\n        event.preventDefault()\n        setNewUser(event.target.value)\n    }\n\n    const handleNewPassword = event => {\n        event.preventDefault()\n        setNewPassword(event.target.value)\n    }\n\n    const loginComponent = \n    <Form onSubmit={loginHandler}>\n      <Form.Group className=\"mb-3\" controlId=\"formUsername\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"username\" placeholder=\"Enter username\" value={username} onChange={handleUsernameChange}/>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Enter password\" value={password} onChange={handlePasswordChange}/>\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n\n    const createUserComponent = \n    <Form onSubmit={createUserHandler}>\n      <Form.Group className=\"mb-3\" controlId=\"formCreateUsername\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"username\" placeholder=\"Enter username\" value={newUser} onChange={handleNewUser}/>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formCreateBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Enter password\" value={newPassword} onChange={handleNewPassword}/>\n        <Form.Text muted>\n          Your password must be at least 7 characters long and cannot contain the /, &, or ? character.\n        </Form.Text>\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n\n    return (\n      <div>\n        <h1>Calc Buddy</h1>\n        <br />\n        <Notification section=\"LOGIN\" />\n        <h2>Login</h2>\n        {loginComponent}\n        <br />\n        <Notification section=\"CREATE_USER\" />\n        <h2>Create User</h2>\n        {createUserComponent}\n      </div>\n      \n    )\n}\n\nexport default Login;","import { Spinner } from \"react-bootstrap\"\n\nconst Loading = () => <div> <br />Loading...<br /> <Spinner animation=\"border\" /></div>\n\nexport default Loading","import { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteUser, refreshToken, resetUser} from \"../reducers/reducer\";\nimport Notification from \"./Notification\";\nimport { Table } from \"react-bootstrap\";\nimport Loading from \"./Loading\";\n\nconst UserStatistics = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const authInfo = useSelector(state => state.authInfo)\n  const userStatistics = useSelector(state => state.userStatistics)\n  const centerStyle = {\"textAlign\": \"center\"}\n\n  const resetUserOnClick = event => {\n    event.preventDefault()\n    const currentTime = Date.now()\n    if (currentTime - authInfo['login_time'] > authInfo['token_expires']) {\n        dispatch(refreshToken(authInfo.refresh_token))\n    } else {\n        dispatch(resetUser(authInfo.id, authInfo.access_token))\n    }\n  }\n\n  const deleteUserOnClick = event => {\n    event.preventDefault()\n    const currentTime = Date.now()\n    if (currentTime - authInfo['login_time'] > authInfo['token_expires']) {\n        dispatch(refreshToken(authInfo.refresh_token))\n    } else {\n        dispatch(deleteUser(authInfo.id, authInfo.access_token))\n        history.push('/')\n    }\n  }\n  \n  if (userStatistics === null) {\n      return <Loading />\n  } else {\n      return (\n        <div>\n          <br />\n          <h2 style={centerStyle}>{authInfo.username}</h2>\n          <br />\n          <Table striped bordered hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Solved</th>\n                <th>Attempts</th>\n              </tr>\n            </thead>\n            <tbody>\n              {userStatistics.map(date_statistic => \n              <tr key={date_statistic.attempt_date}>\n                <td >{date_statistic.attempt_date.substring(0, 16)} </td>\n                <td >{date_statistic.solved} </td>\n                <td >{date_statistic.attempts}</td>\n              </tr>)}\n            </tbody>\n          </Table>\n          <br />\n          <Notification section=\"RESET_USER\" />\n          <br />\n          <button onClick={resetUserOnClick}>Reset User</button>\n          <button onClick={deleteUserOnClick}>Delete User</button>\n          <Notification section=\"RESUBMIT\" />\n      </div>)}\n  }\n    \nexport default UserStatistics;","import { Table } from \"react-bootstrap\"\nimport { useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport Loading from \"./Loading\"\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\n\nconst ProblemIndex = () => {\n    const allProblems = useSelector(state => state.allProblems)\n    if (allProblems === null) {\n        return <Loading />\n    } else {\n        return (\n            <div>\n                <br />\n                <h2>Problem Index</h2>\n                <br />\n                <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Problem</th>\n                        <th>Solved</th>\n                        <th>Attempts</th>\n                        <th>Most Recent Attempt</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                        {allProblems.map(problem => \n                            <tr key={problem.id}>\n                                <td> <Link to={`/problems/${problem.id}`}><TeX math={problem.latex_rep} /> </Link> </td>\n                                <td>{problem.solved}</td>\n                                <td>{problem.attempts}</td>\n                                <td>{problem.most_recent_solved !== null ? problem.most_recent_solved.substring(0, 16) : \"N/A\"}</td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table> \n            </div>\n        )\n    }\n    \n}\n\nexport default ProblemIndex","import { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { refreshToken, submitAnswer } from \"../reducers/reducer\"\nimport Notification from \"./Notification\"\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\n\nconst QuestionPrompt = ({problemInfo}) => {\n    const dispatch = useDispatch()\n    const authInfo = useSelector(state => state.authInfo)\n    const [userResponse, setUserResponse] = useState('')\n\n    const handleUserInput = event => {\n        event.preventDefault()\n        setUserResponse(event.target.value)\n    }\n\n    const submitResponse = event => {\n        event.preventDefault()\n        const currentTime = Date.now()\n        if (currentTime - authInfo['login_time'] > authInfo['token_expires']) {\n            dispatch(refreshToken(authInfo.refresh_token))\n        } else {\n            dispatch(submitAnswer(authInfo.access_token, authInfo.id, problemInfo.id, userResponse))\n            setUserResponse('')\n        }\n    }\n\n    const centerStyle = {\n        \"textAlign\": \"center\"\n    }\n\n    return (\n        <div style={centerStyle}>\n            <Notification section=\"SHOW_SOLUTION\" />\n            <TeX block>{problemInfo.latex_rep}</TeX>\n            {problemInfo.assumptions_latex !== null && <TeX block>{problemInfo.assumptions_latex}</TeX>}\n            <Notification section=\"RESUBMIT\" />\n            <form onSubmit={submitResponse}>\n                <input type=\"text\" value={userResponse} onChange={handleUserInput}/>\n                <br />\n                <br />\n                <input type=\"submit\" value=\"Submit\" />\n            </form>   \n        </div>\n    )\n}\n\nexport default QuestionPrompt","import { useDispatch, useSelector } from \"react-redux\"\nimport { useRouteMatch } from \"react-router-dom\"\nimport { refreshToken, resetQuestion} from \"../reducers/reducer\"\nimport Loading from \"./Loading\"\nimport Notification from \"./Notification\"\nimport QuestionPrompt from \"./QuestionPrompt\"\n\nconst ProblemStatistics = () => {\n    const dispatch = useDispatch()\n    const match = useRouteMatch(\"/problems/:id\")\n    const authInfo = useSelector(state => state.authInfo)\n    const problemInfo = useSelector(state => {\n        if (state.allProblems === null) {\n            return null\n        } else {\n            return state.allProblems.find(problem => problem.id === parseInt(match.params.id))\n        }\n    })\n\n    const resetQuestionOnClick = event => {\n        event.preventDefault()\n        const currentTime = Date.now()\n        if (currentTime - authInfo['login_time'] > authInfo['token_expires']) {\n          dispatch(refreshToken(authInfo.refresh_token))\n        } else {\n          dispatch(resetQuestion(authInfo.access_token, authInfo.id, problemInfo.id))\n        }\n    }\n\n    if (problemInfo === null) {\n        return <Loading />\n    } else if (problemInfo === undefined) {\n        return `Problem with id ${match.params.id} doesn't exist`\n    } else {\n        return (\n            <div>\n                <br />\n                <h3>Solved: {problemInfo.solved}</h3>\n                <h3>Attempted: {problemInfo.attempts}</h3>\n                <h3>Most Recent Attempt: {problemInfo.most_recent_solved !== null ? problemInfo.most_recent_solved.substring(0, 16) : \"N/A\"}</h3>\n                <QuestionPrompt problemInfo={problemInfo} />\n                <br />\n                <Notification section=\"RESET_PROBLEM\" />\n                <button onClick={resetQuestionOnClick}>Reset Question</button>\n                <Notification section=\"RESUBMIT\" />\n            </div>\n        )\n    }\n}\n\nexport default ProblemStatistics","import 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\nimport { Table } from 'react-bootstrap';\n\nconst variableLatex = 'x'\nconst functionLatex = 'f(x)'\nconst derivativeLatex = 'f\\'(x)'\nconst nestedDerivativeLatex = 'f\\'(g(x))'\nconst indefiniteIntegralLatex = '\\\\int f(x) \\\\ dx'\nconst definiteIntegralLatex = '\\\\int_a^b f(x) \\\\ dx'\nconst sinLatex = '\\\\sin{x}'\nconst cosLatex = '\\\\cos{x}'\nconst tanLatex = '\\\\tan{x}'\nconst cscLatex = '\\\\csc{x}'\nconst secLatex = '\\\\sec{x}'\nconst cotLatex = '\\\\cot{x}'\nconst asinLatex = '\\\\sin^{-1}{x}'\nconst acosLatex = '\\\\cos^{-1}{x}'\nconst atanLatex = '\\\\tan^{-1}{x}'\nconst eLatex = 'e'\nconst piLatex = '\\\\pi'\nconst logLatex = '\\\\log{x}'\nconst lnLatex = '\\\\ln{x}'\nconst sqrtLatex = '\\\\sqrt{x}'\n\nconst UserInstructions = () => {\n    return (\n        <div>\n            <br />\n            Use order of operations when specifying answer.\n            <br />\n            <br />\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>syntax</th>\n                  <th>operation</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>+</td>\n                  <td>addition</td>\n                </tr>\n                <tr>\n                  <td>-</td>\n                  <td>subtraction</td>\n                </tr>\n                <tr>\n                  <td>*</td>\n                  <td>multiplication</td>\n                </tr>\n                <tr>\n                  <td>/</td>\n                  <td>division</td>\n                </tr>\n                <tr>\n                  <td>**</td>\n                  <td>exponent</td>\n                </tr>\n                <tr>\n                  <td>( )</td>\n                  <td>parentheses</td>\n                </tr>\n              </tbody>\n            </Table>\n            Use variables specified in problem.\n            <br />\n            <br />\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>format</th>\n                        <th>interpretation</th>\n                        <th>math representation</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>x</td>\n                        <td>variable x</td>\n                        <td><TeX>{variableLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>f(x)</td>\n                        <td>function f</td>\n                        <td><TeX>{functionLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>Derivative(f(x), x)</td>\n                        <td>derivative of f with x as input</td>\n                        <td><TeX>{derivativeLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>Derivative(f(g(x)), g(x))</td>\n                        <td>derivative of f with g(x) as input</td>\n                        <td><TeX>{nestedDerivativeLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>Integral(f(x), x)</td>\n                        <td>integral of f</td>\n                        <td><TeX>{indefiniteIntegralLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>Integral(f(x), (x, a, b))</td>\n                        <td>integral of f evaluated from range a to b</td>\n                        <td><TeX>{definiteIntegralLatex}</TeX></td>\n                    </tr>\n                </tbody>\n            </Table>\n            <br />\n            Pre-defined constants and functions to use\n            <br />\n            <br />\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>format</th>\n                        <th>math representation</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>E</td>\n                        <td><TeX>{eLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>pi</td>\n                        <td><TeX>{piLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>log(x)</td>\n                        <td><TeX>{logLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>ln(x)</td>\n                        <td><TeX>{lnLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>sqrt(x)</td>\n                        <td><TeX>{sqrtLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>sin(x)</td>\n                        <td><TeX>{sinLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>cos(x)</td>\n                        <td><TeX>{cosLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>tan(x)</td>\n                        <td><TeX>{tanLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>csc(x)</td>\n                        <td><TeX>{cscLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>sec(x)</td>\n                        <td><TeX>{secLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>cot(x)</td>\n                        <td><TeX>{cotLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>asin(x)</td>\n                        <td><TeX>{asinLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>acos(x)</td>\n                        <td><TeX>{acosLatex}</TeX></td>\n                    </tr>\n                    <tr>\n                        <td>atan(x)</td>\n                        <td><TeX>{atanLatex}</TeX></td>\n                    </tr>\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default UserInstructions","import { useSelector } from \"react-redux\"\nimport Loading from \"./Loading\"\nimport QuestionPrompt from \"./QuestionPrompt\"\n\nconst DailyProblemDisplay = () => {\n    const dailyProblems = useSelector(state => state.dailyProblems)\n    const centerStyle = {\"textAlign\": \"center\"}\n\n    if (dailyProblems === null) {\n        return <Loading />\n    } else if (dailyProblems.length === 0) {\n        return (\n            <div>\n                <br />\n                <h2 style={centerStyle}>Daily quota solved!</h2>\n            </div>\n        )\n    } else {\n        const randomIndex = Math.floor(Math.random() * dailyProblems.length)\n        return (\n        <div>\n            <h2 style={centerStyle}>Daily Problems</h2>\n            <h4 style={centerStyle}>Problems Left: {dailyProblems.length}</h4>\n            <br />\n            <QuestionPrompt problemInfo={dailyProblems[randomIndex]} />\n        </div>\n        )\n    }\n}\n\nexport default DailyProblemDisplay","const About = () => {\n    return (\n        <div>\n            <br />\n            <h2>Calc Buddy</h2>\n            <br />\n            This is an app to help you efficiently memorize the core identities/formulas used in calculus.\n            <br /><br />\n            Every day, you will automatically be assigned a set of daily problems to solve. \n            Having to actively recall an answer is a stronger way of testing your understanding compared to browsing your formula sheet.\n            <br /><br />\n            Based on how often you answer correctly, a scheduling algorithm will re-assign the same question some time in the future at increasing intervals.\n            Reviewing your knowledge ocassionally drastically strengthens your long-term memory, a concept known as spaced repitition.\n            <br /><br />\n            This math application is an implemented version of Anki. \n            The benefit is that you don't have to make your own deck of cards, and the application calculates whether your solution is mathematically equivalent to the question.\n            For more information, check out the <a href=\"https://docs.ankiweb.net/background.html\">Anki Manual</a>\n        </div>\n    )\n}\n\nexport default About","import { useDispatch } from 'react-redux';\nimport { Link, Route, Switch, useHistory} from 'react-router-dom';\nimport UserStatistics from './UserStatistics';\nimport ProblemIndex from './ProblemIndex';\nimport ProblemStatistics from './ProblemStatistics';\nimport { logoutUser } from '../reducers/reducer';\nimport UserInstructions from './UserInstructions';\nimport DailyProblemDisplay from './DailyProblemDisplay';\nimport About from './About';\n\nconst Dashboard = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const logout = event => {\n      event.preventDefault()\n      dispatch(logoutUser())\n      history.push('/')\n    }\n\n    const linkStyle = {padding: 10}\n\n    // saving to local storage: https://fullstackopen.com/en/part5/login_in_frontend#saving-the-token-to-the-browsers-local-storage\n    return (\n      <div>\n        <div>\n          <Link style={linkStyle} to=\"/\">home</Link>\n          <Link style={linkStyle} to=\"/problems\">problems</Link>\n          <Link style={linkStyle} to=\"/info\">user info</Link>\n          <Link style={linkStyle} to=\"/instructions\">instructions</Link>\n          <Link style={linkStyle} to=\"/about\">about</Link>\n          <Link style={linkStyle} to=\"/\" onClick={logout}>logout</Link>\n        </div>\n        <Switch>\n          <Route path=\"/problems/:id\">\n            <ProblemStatistics />\n          </Route>\n          <Route path=\"/problems\">\n            <ProblemIndex />\n          </Route>\n          <Route path=\"/info\">\n            <UserStatistics />\n          </Route>\n          <Route path=\"/instructions\">\n            <UserInstructions />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>          \n          <Route exact path=\"/\">\n            <DailyProblemDisplay />\n          </Route>\n          <Route path=\"*\">\n            <div>\n              <h2>404 Not Found</h2>\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    )\n}\n\nexport default Dashboard","import Login from './Login'\nimport Dashboard from './Dashboard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { reloadUser } from '../reducers/reducer';\n\nconst App = () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('userInfo')\n        if (loggedUserJSON) {\n          const user = JSON.parse(loggedUserJSON)\n          dispatch(reloadUser(user))\n        }\n      }, [])\n    \n    const authInfo = useSelector(state => state.authInfo)\n    if (authInfo !== null) {\n        return <Dashboard />\n    } else {\n        return <Login />\n    }\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reducer from './reducers/reducer'\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport Store from './store';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <Router> \n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}